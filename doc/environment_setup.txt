This documents describes the setup of my CygWin and Linux environment.
Before proceding you should create a Git clone of this repository.
Create a GitHub directory "GitHub" in your home directory and create the clone in the GitHub directory.
---------------------------------------------------------------------------------------------------------
1. Add following code to .bashrc file when using Cygwin:
# logession causes problems during booting on Linux systems
if [ -f "${HOME}/bin/logsession" ] ; then
  source "${HOME}/bin/logsession"
fi
if [ -f "${HOME}/bin/my_aliases" ] ; then
  source "${HOME}/bin/my_aliases"
fi
# ssh-pageant
# Only required for Cygwin. Just leave it out when running on Linux
eval $(/usr/bin/ssh-pageant -ra /tmp/.ssh-pageant)
---------------------------------------------------------------------------------------------------------

2. Create the following directories when on Cygwin
/${HOME}/bin
/cygdrive/d/CygwinLogs
/cygdrive/d/CygwinLogs/Terminal

Create the following directories when on Linux
/${HOME}/bin
/${HOME}/TerminalLogs
/${HOME}/TerminalLogs/Terminal
---------------------------------------------------------------------------------------------------------

3. Create the following symlinks when running on Cygwin
ln -s /cygdrive/d/CygwinLogs CygwinLogs
---------------------------------------------------------------------------------------------------------

4. Add .logrc with following parameters
For Cygwin:
LOGDIR="/cygdrive/d/CygwinLogs/"
TIMDIR="$LOGDIR""Terminal/"
LOGFILE="Session-$(date +%Y%m%d-%H%M%S-%N)"

For Linux:
LOGDIR="${HOME}/TerminalLogs"
TIMDIR="$LOGDIR""Terminal/"
LOGFILE="Session-$(date +%Y%m%d-%H%M%S-%N)"
---------------------------------------------------------------------------------------------------------

5. Create .my.cnf in your home directory if you will use the scripts that connect to the MySQL database server.
.my.cnf should at least contain the following information:
[mysql]
user=my_username
password=my_password
---------------------------------------------------------------------------------------------------------

6. Check that you have a bin directory in your home directory.
Execute rsync_bin.sh to keep the bin directory in your home directory synchronized with the bin folder in the repository.
Sub-directories in the bin directory will no be synchronized. 
---------------------------------------------------------------------------------------------------------
 
7. Nice setup for working witg GIT repositories, add this to your .bashrc file:
function _git_prompt() {
   local git_status="`git status -unormal 2>&1`"
   if ! [[ "$git_status" =~ not\ a\ git\ repo ]]; then
       if [[ "$git_status" =~ nothing\ to\ commit ]]; then
           local ansi=42
       elif [[ "$git_status" =~ nothing\ added\ to\ commit\ but\ untracked\ files\ present ]]; then
           local ansi=43
       else
           local ansi=45
       fi
       if [[ "$git_status" =~ On\ branch\ ([^[:space:]]+) ]]; then
           branch=${BASH_REMATCH[1]}
           test "$branch" != master || branch=' '
       else
           # Detached HEAD.  (branch=HEAD is a faster alternative.)
           branch="(`git describe --all --contains --abbrev=4 HEAD 2> /dev/null ||
               echo HEAD`)"
       fi
       echo -n '\[\e[0;37;'"$ansi"';1m\]'"$branch"'\[\e[0m\] '
   fi
}

function _prompt_command() {
       PS1="`_git_prompt`"'\u@\h:\w\$ '
}

PROMPT_COMMAND=_prompt_command

# Setting colorful bash prompt reflecting GIT status.


